---
- name: "vivid:set_fact:vivid_release"
  block:
    - name: "vivid:sect_fact:vivid_release:from:github"
      when: "vivid_release is not defined"
      block:
        - name: "vivid:get/latest-release"
          community.general.github_release:
            user: "{{ vivid.github.user }}"
            repo: "{{ vivid.github.repo }}"
            action: "latest_release"
          register: "vivid_release"
          until: "vivid_release is succeeded"
          changed_when: "vivid_release.tag"
          retries: "{{ ansible_retry_count | int }}"
          delay: "{{ ansible_retry_delay | int }}"
          failed_when: "not vivid_release.tag"
        - name: "vivid:cache_fact:vivid_release.tag"
          ansible.builtin.set_fact:
            vivid_release: '{"tag": "{{ vivid_release.tag }}"}'
            cacheable: true
  rescue:
    - name: "vivid:set_fact:vivid_release:from:defaults"
      ansible.builtin.set_fact:
        vivid_release: '{"tag": "{{ vivid.github.tag }}"}'
        cacheable: false

- name: "vivid:set_fact:download:filename"
  ansible.builtin.set_fact:
    vivid_download_filename: >-
      {{
          'vivid'
        + '_'
        + vivid_release.tag[1:]
        + '_'
        + ('amd64' if (ansible_architecture == 'x86_64') else 'arm64')
        + '.deb'
      }}
- name: "vivid:set_fact:download:url|cache_path"
  ansible.builtin.set_fact:
    vivid_download_url: >-
      {{
        'https://github.com/'
        + vivid.github.user
        + '/'
        + vivid.github.repo
        + '/releases/download/'
        + vivid_release.tag
        + '/'
        + vivid_download_filename
      }}

- name: "vivid:cache"
  when: "(ansible_use_download_cache | bool)"
  block:
    - name: "vivid:set_fact:cache:path"
      ansible.builtin.set_fact:
        vivid_download_cache_path: >-
          {{
            ansible_download_cache_path
            + '/'
            + vivid_download_filename
          }}
    - name: "vivid:stat:cache:path"
      ansible.builtin.stat:
        path: "{{ vivid_download_cache_path }}"
      register: "vivid_download_cache_file"
    - name: "vivid:cache:update"
      when: "not vivid_download_cache_file.stat.exists"
      block:
        - name: "vivid:file:cache:directory"
          ansible.builtin.file:
            state: "directory"
            path: "{{ ansible_download_cache_path }}"
            mode: "750"
        - name: "vivid:get_url:cache:download"
          ansible.builtin.get_url:
            url: "{{ vivid_download_url }}"
            dest: "{{ vivid_download_cache_path }}"
            mode: "750"
          register: "vivid_download_result"
          failed_when: "(vivid_download_result is failed)"
          until: "(vivid_download_result is succeeded)"
          retries: "{{ ansible_retry_count | int }}"
          delay: "{{ ansible_retry_delay | int }}"
- name: "vivid:apt:deb:install"
  become: true
  ansible.builtin.apt:
    deb: >-
      {{
        (ansible_use_download_cache | bool)
        | ternary(
            vivid_download_cache_path,
            vivid_download_url
          )
      }}
  register: "vivid_apt_result"
  failed_when: "(vivid_apt_result is failed) and (not (vivid_apt_result.msg.find('already installed') > -1))"
  until: "(vivid_apt_result is succeeded)"
  retries: "{{ ansible_retry_count | int }}"
  delay: "{{ ansible_retry_delay | int }}"
