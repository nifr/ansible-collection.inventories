---
- name: "xsv:set_fact:xsv_release"
  block:
    - name: "xsv:sect_fact:xsv_release:from:github"
      when: "xsv_release is not defined"
      block:
        - name: "xsv:get/latest-release"
          github_release:
            user: "{{ xsv.github.user }}"
            repo: "{{ xsv.github.repo }}"
            action: "latest_release"
          register: "xsv_release"
          until: "xsv_release is succeeded"
          changed_when: "xsv_release.tag"
          retries: "{{ ansible_retry_count | int }}"
          delay: "{{ ansible_retry_delay | int }}"
          failed_when: "not xsv_release.tag"
        - name: "xsv:cache_fact:xsv_release.tag"
          set_fact:
            xsv_release: '{"tag": "{{ xsv_release.tag }}"}'
            cacheable: true
  rescue:
    - name: "xsv:set_fact:xsv_release:from:defaults"
      set_fact:
        xsv_release: '{"tag": "{{ xsv.github.tag }}"}'
        cacheable: false

- name: "xsv:version:local"
  command: "~/.local/bin/xsv --version"
  register: "xsv_version"
  failed_when: false
  changed_when: false

- when: >-
    (xsv_version.rc != 0)
    or
    (
      xsv_version.stdout|regex_search('(\\d+(\\.\\d+){2,})')
      is
      version( xsv_release.tag, operator='lt', strict=true)
    )
  block:
    - name: "xsv:mktemp"
      tempfile:
        state: "directory"
        suffix: "xsv"
      register: "xsv_tmp_dir"

    - name: "xsv:unarchive"
      unarchive:
        src: "https://github.com/{{ xsv.github.user }}/{{ xsv.github.repo }}/releases/download/{{ xsv_release.tag }}/xsv-{{ xsv_release.tag }}-x86_64-unknown-linux-musl.tar.gz"
        remote_src: true
        dest: "{{ xsv_tmp_dir.path }}"
      register: "xsv_archive_download"
      until: "xsv_archive_download is succeeded"
      retries: "{{ ansible_retry_count | int }}"
      delay: "{{ ansible_retry_delay | int }}"

    - name: "xsv:copy"
      copy:
        remote_src: true
        src: "{{ xsv_tmp_dir.path }}/xsv"
        dest: "~/.local/bin/xsv"
        mode: "750"
